image: node:latest

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

before_script:
  - npm install --silent

stages:
  - lint
  - test
  - build
  - deploy

lint:
  stage: lint
  script: npm run lint

test:
  stage: test
  script:
    - apt-get update && apt-get install -y unzip fontconfig locales gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
    - npm run test

build:
  stage: build
  script: npm run build
  artifacts:
    paths:
     - dist

deploy:
  stage: deploy
  script:
    # Check for ssh-agent + rsync and install if not present
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y  )"
    # Inject the remote's private key
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # Append keyscan output into known hosts
    - ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh $SERVER_USER@$SERVER_IP

#release_job:
#  stage: build
#  script: node_modules/.bin/ng build --prod --aot
#  artifacts:
#    name: "project-$CI_COMMIT_REF_NAME"
#    paths:
#      - dist/
#  only:
#    - tags
